{"version":3,"file":"index.esm.js","sources":["../src/useIsomorphicLayoutEffect.ts","../src/wrapMutableObject.ts","../src/useCleanup.ts","../src/useQuery.ts"],"sourcesContent":["import { useLayoutEffect } from 'react';\n\nconst isSSR = (\n  typeof window === 'undefined'\n  || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent)\n);\n\nexport const useIsomorphicLayoutEffect = isSSR ? (cb: () => void) => cb() : useLayoutEffect;\n","import {\n  Accessor,\n  getAccessor,\n} from 'gqless';\n\nconst wrapperMap = new WeakMap<object, object>();\n\nconst isMutableObject = (x: unknown) => {\n  try {\n    return x !== null && typeof x === 'object' && !!getAccessor(x);\n  } catch (e) {\n    return false;\n  }\n};\n\nconst proxyHandler = {\n  get(target: object, property: string) {\n    const value = Reflect.get(target, property);\n    if (typeof value === 'function' && Array.isArray(target)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const arrayFunc = Array.prototype[property as any];\n      // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n      return arrayFunc.bind(wrapMutableObject(target));\n    }\n    if (typeof value === 'function' || isMutableObject(value)) {\n      // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n      return wrapMutableObject(value);\n    }\n    return value;\n  },\n  apply(target: Function, thisArg: unknown, argsList: unknown[]) {\n    const value = Reflect.apply(target, thisArg, argsList);\n    if (typeof value === 'function' || isMutableObject(value)) {\n      // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n      return wrapMutableObject(value);\n    }\n    return value;\n  },\n};\n\nexport const wrapMutableObject = <T extends object>(obj: T): T => {\n  let wrapper = wrapperMap.get(obj);\n  if (!wrapper) {\n    wrapper = new Proxy(obj, proxyHandler);\n    wrapperMap.set(obj, wrapper);\n  }\n  return wrapper as T;\n};\n\nexport const notifyMutation = (accessor: Accessor) => {\n  if (typeof accessor.data === 'object') {\n    const newWrapper = new Proxy(accessor.data, proxyHandler);\n    wrapperMap.set(accessor.data, newWrapper);\n  }\n  if (accessor.parent) {\n    notifyMutation(accessor.parent);\n  }\n};\n","import {\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\n\nconst useCleanupForLegacyMode = () => {\n  type Cleanup = () => void;\n  const cleanups = useRef<Cleanup[]>([]);\n  const addCleanup = useCallback((func: () => void) => {\n    cleanups.current.push(func);\n  }, []);\n  useEffect(() => {\n    const cleanupsCurrent = cleanups.current;\n    return () => {\n      cleanupsCurrent.forEach((func) => func());\n    };\n  }, []);\n  return addCleanup;\n};\n\n// CM-safe timer-based cleanup hook\nconst useCleanupForConcurrentMode = () => {\n  type Cleanup = {\n    timer: NodeJS.Timeout;\n    func: () => void;\n  };\n  const cleanups = useRef<Cleanup[]>([]);\n  const addCleanup = useCallback((func: () => void) => {\n    const timer = setTimeout(func, 5 * 1000);\n    cleanups.current.push({ timer, func });\n  }, []);\n  useEffect(() => {\n    const cleanupsCurrent = cleanups.current;\n    cleanupsCurrent.forEach(({ timer }) => clearTimeout(timer));\n    return () => {\n      cleanupsCurrent.forEach(({ func }) => func());\n    };\n  }, []);\n  return addCleanup;\n};\n\nexport const useCleanup = process.env.EXPERIMENTAL_USE_CLENAUP_FOR_CM\n  ? useCleanupForConcurrentMode : useCleanupForLegacyMode;\n","import {\n  useCallback,\n  useEffect,\n  useReducer,\n  useRef,\n} from 'react';\nimport {\n  Accessor,\n  Client,\n  accessorInterceptors,\n} from 'gqless';\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nimport { wrapMutableObject, notifyMutation } from './wrapMutableObject';\nimport { useCleanup } from './useCleanup';\n\n/**\n * useQuery\n *\n * This hook returns query from gqless.\n *\n * @example\n * import { useQuery } from 'gqless-hook';\n * import { client } from '../graphql'; // generated by @gqless/cli\n *\n * const Component = () => {\n *   const query = useQuery(client);\n *   return (\n *     <div>{query.foo}</div>\n *   );\n * };\n */\nexport const useQuery = <Data extends object>(client: Client<Data>): Data => {\n  const addCleanup = useCleanup();\n\n  const [, forceUpdate] = useReducer((c) => c + 1, 0);\n  const fetching = useRef(false);\n  if (fetching.current) {\n    throw new Promise((resolve) => {\n      client.scheduler.commit.onFetched.then(() => {\n        fetching.current = false;\n        resolve();\n      });\n    });\n  }\n  useIsomorphicLayoutEffect(() => {\n    if (client.scheduler.commit.accessors.size > 0) {\n      fetching.current = true;\n      forceUpdate();\n    }\n  });\n\n  type Callback = (prevData: unknown) => void;\n  const dataChangeCallbacks = useRef(new Map<Accessor, Callback>());\n  const onAccessor = useCallback((accessor: Accessor) => {\n    let callback = dataChangeCallbacks.current.get(accessor);\n    if (!callback) {\n      callback = () => {\n        notifyMutation(accessor);\n        if (!fetching.current) {\n          forceUpdate();\n        }\n      };\n      dataChangeCallbacks.current.set(accessor, callback);\n    }\n    addCleanup(accessor.onDataChange(callback));\n  }, [addCleanup]);\n  accessorInterceptors.add(onAccessor);\n  const deleteInterceptorTimer = setTimeout(() => {\n    accessorInterceptors.delete(onAccessor);\n  }, 5 * 1000);\n  useEffect(() => {\n    clearTimeout(deleteInterceptorTimer);\n    accessorInterceptors.delete(onAccessor);\n  });\n\n  return wrapMutableObject(client.query);\n};\n"],"names":["useIsomorphicLayoutEffect","window","test","navigator","userAgent","cb","useLayoutEffect","wrapperMap","WeakMap","isMutableObject","x","getAccessor","e","proxyHandler","get","target","property","value","Reflect","Array","isArray","prototype","bind","wrapMutableObject","apply","thisArg","argsList","obj","wrapper","Proxy","set","useCleanup","process","env","EXPERIMENTAL_USE_CLENAUP_FOR_CM","cleanups","useRef","addCleanup","useCallback","func","timer","setTimeout","current","push","useEffect","cleanupsCurrent","forEach","clearTimeout","useQuery","client","forceUpdate","useReducer","c","fetching","Promise","resolve","scheduler","commit","onFetched","then","accessors","size","dataChangeCallbacks","Map","onAccessor","accessor","callback","notifyMutation","data","newWrapper","parent","onDataChange","accessorInterceptors","add","deleteInterceptorTimer","query"],"mappings":"mKAEA,IAKaA,EAJO,oBAAXC,QACJ,sBAAsBC,KAAKD,OAAOE,WAAaF,OAAOE,UAAUC,WAGpB,SAACC,UAAmBA,KAAOC,ECFtEC,EAAa,IAAIC,QAEjBC,EAAkB,SAACC,GACvB,IACE,OAAa,OAANA,GAA2B,iBAANA,KAAoBC,EAAYD,GAC5D,MAAOE,GACP,WAIEC,EAAe,CACnBC,aAAIC,EAAgBC,GAClB,IAAMC,EAAQC,QAAQJ,IAAIC,EAAQC,GAClC,MAAqB,mBAAVC,GAAwBE,MAAMC,QAAQL,GAE7BI,MAAME,UAAUL,GAEjBM,KAAKC,EAAkBR,IAErB,mBAAVE,GAAwBR,EAAgBQ,GAE1CM,EAAkBN,GAEpBA,GAETO,eAAMT,EAAkBU,EAAkBC,GACxC,IAAMT,EAAQC,QAAQM,MAAMT,EAAQU,EAASC,GAC7C,MAAqB,mBAAVT,GAAwBR,EAAgBQ,GAE1CM,EAAkBN,GAEpBA,IAIEM,EAAoB,SAAmBI,GAClD,IAAIC,EAAUrB,EAAWO,IAAIa,GAK7B,OAJKC,IACHA,EAAU,IAAIC,MAAMF,EAAKd,GACzBN,EAAWuB,IAAIH,EAAKC,IAEfA,GCJIG,EAAaC,QAAQC,IAAIC,gCApBF,WAKlC,IAAMC,EAAWC,EAAkB,IAC7BC,EAAaC,EAAY,SAACC,GAC9B,IAAMC,EAAQC,WAAWF,EAAM,KAC/BJ,EAASO,QAAQC,KAAK,CAAEH,MAAAA,EAAOD,KAAAA,KAC9B,IAQH,OAPAK,EAAU,WACR,IAAMC,EAAkBV,EAASO,QAEjC,OADAG,EAAgBC,QAAQ,mBAAeC,eAAZP,oBAEzBK,EAAgBC,QAAQ,mBAAcP,IAAXA,YAE5B,IACIF,GAjCuB,WAE9B,IAAMF,EAAWC,EAAkB,IAC7BC,EAAaC,EAAY,SAACC,GAC9BJ,EAASO,QAAQC,KAAKJ,IACrB,IAOH,OANAK,EAAU,WACR,IAAMC,EAAkBV,EAASO,QACjC,kBACEG,EAAgBC,QAAQ,SAACP,UAASA,QAEnC,IACIF,GCcIW,EAAW,SAAsBC,GAC5C,IAAMZ,EAAaN,IAEVmB,EAAeC,EAAW,SAACC,UAAMA,EAAI,GAAG,MAC3CC,EAAWjB,GAAO,GACxB,GAAIiB,EAASX,QACX,UAAUY,QAAQ,SAACC,GACjBN,EAAOO,UAAUC,OAAOC,UAAUC,KAAK,WACrCN,EAASX,SAAU,EACnBa,QAINvD,EAA0B,WACpBiD,EAAOO,UAAUC,OAAOG,UAAUC,KAAO,IAC3CR,EAASX,SAAU,EACnBQ,OAKJ,IAAMY,EAAsB1B,EAAO,IAAI2B,KACjCC,EAAa1B,EAAY,SAAC2B,GAC9B,IAAIC,EAAWJ,EAAoBpB,QAAQ5B,IAAImD,GAC1CC,GAOHJ,EAAoBpB,QAAQZ,IAAImC,EANhCC,EAAW,YFRa,SAAjBC,EAAkBF,GAC7B,GAA6B,iBAAlBA,EAASG,KAAmB,CACrC,IAAMC,EAAa,IAAIxC,MAAMoC,EAASG,KAAMvD,GAC5CN,EAAWuB,IAAImC,EAASG,KAAMC,GAE5BJ,EAASK,QACXH,EAAeF,EAASK,QEGpBH,CAAeF,GACVZ,EAASX,SACZQ,MAKNb,EAAW4B,EAASM,aAAaL,KAChC,CAAC7B,IACJmC,EAAqBC,IAAIT,GACzB,IAAMU,EAAyBjC,WAAW,WACxC+B,SAA4BR,IAC3B,KAMH,OALApB,EAAU,WACRG,aAAa2B,GACbF,SAA4BR,KAGvBzC,EAAkB0B,EAAO0B"}